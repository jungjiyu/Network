도메인 Domain
	: ip 주소 외우기 어려우니까 ip 주소에 이름 붙여둔 것
	: 도메인 네임 가지고 바로 그 주소로 찾아가는게 아니라 domain name server 에 도메인 넘기면 거기서 ip 주소 넘겨주는거고 그 ip 주소로 찾아가는것
	: 계층구조<< 서브도메인+도메인네임+최상위도메인+루트도메인
		: 루트도메인 root domain
			: ' . '
			: 모든 도메인의 마지막에는 '.' 이 들어가는데 항상 들어가다 보니까 생략이 가능ㅇ.
		: 1단계>> 최상위 도메인 TLD (top level domain)
			: 도메인의 목적 종류 국가 를 나타냄
			: 주의해야할게 최상위 도메인이지만 그 위에 루트 도메인이 있는거임.(루트 도메인은 사실상 최최상위 도메인)
			: net, com , edu,kr
		: 2단계>> 차상위 도메인 SLD (second level domain) == 호스트 도메인 == 서브 도메인
			: 보조 도메인으로 , 도메인 네임의 확장자이다
			: www, news, weather 같은거
		: 3단계>> 도메인 이름 Domain name
			: google, naver 같은거
URL 
	: 프로토콜+://+도메인+기타
		https://music.naver.com:80/listen/top100.nhn?domain=OVERSEA&duration=1h#content

	: "://"
		: 프로토콜과 도메인의 구분 기호
		: ":" 은 프로토콜과 도메인 부분을 구분하는 용도로 쓰여 항상 붙고, "//"는 이후 문장이 권한임을 나타내는 용도로 쓰이기 때문에 안붙는 경우도 있다

	: 기타
		: 포트번호
			: 도메인 네임뒤 번호
			: 
		: path
			: "도메인 + / "와 "?" 사이에 오는 얘 (포트 번호가 있다면 "포트번호+/" 와 "?"사이에 오는 얘)
			: 리소스 경로.
				: 초기엔 웹 서버의 실제 파일 위치를 나타냈는데 요즘은 물리적 실체가 있진 않고 추상적으로 처리함
		: parameter == 쿼리 스트링
			: "?" 와 "#" 사이에 오는 얘
			: 형식) key1=value1& key2=value2& key3=value1&....
				: 그러니까 키와값의 쌍 나열
				: & 로 구분되어 여러개의 쿼리문이 올 수 있다
			: 웹서버에 제공되는 추가 매개변수
				: 웹 서버가 리소스를 반환하기 전에 이러한 매개변수를 통하여 추가 작업을 수행하게 함

		: Ancher 앵커 == fragment 프레그먼트
			: "#" 즉 해시태그 뒤에 옴
			: 리소스 내부에서 일종의 책갈피 역할. 특정 지점의 콘텐츠를 표시하도록 하게 함
				: 그러니까 비디오의 특정 시간으로 넘어가려고 시도 하는 것
			: 앵커 부분은 서버로 전송되지 않는다.



IT 관련인이 알아야하는 필수 DNS 서버 주소
	: 168.126.63.1
		: kt dns 즉 kt 도메인네임 시스템에 매핑된 IP 주소이다
		: 이 DNS 주소를 통해 도메인 네임과 해당하는 ip 주소를 매핑하여 인터넷 사용자들이 웹사이트에 접속할 수 있게 해준다
			: 그렇다고 모든 ip 주소를 가지고 있는건 아니다		
				: 인트라넷 같은 경우는 등록 안되있는 경우 많다	

	: 8.8.8.8
		: google dns 서버
	

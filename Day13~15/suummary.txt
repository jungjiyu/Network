자기만의 lan 영역이 없는 라우터의 경우 따로 fast ethernet 케이블, 포트가 없는 거라서 따로 interface fast 0/0  을 설정하지 않고, serial 케이블만 설정한다.


	
패킷 트레이서 상에선 직접 라우터를 클릭하고 CLI 창에서 관련 설정을 할 수 있지만  , 원래는 랩탑을 콘솔로 해당 라우터와 연결해서 랩탑의 터미널 창에서 하는게 정석이므로 랩탑의 터미널 창에서 설정하길 


콘솔 접속 vs Telnet 접속
	: 콘솔 접속 >> 콘솔 케이블로 "직접" 해당 라우터와 랩탑 같은걸 연결해서 터미널 창에서 설정을 함.
	: Telnet 접속 >> 해당 라우터의 LAN 구간에 있는 호스트의 프롬프트 창으로 원격 접속을 하여 설정을 함.  
		: 여러대의 호스트에서 동시 접속이 가능하며, telnet 과 관련한 설정은 line vty 임.

하나의 라우터에 serial 케이블이 여러개 연결되있는경우  serial0/0 serial0/1 이런식으로 각각 따른 포트에 연결되있는거다 
		: serial 포트라고 해서 죄다 se0/0 에 연결되있는게 아니다
		: 어떤 시리얼 포트가 어떤 라우터와 연결되있는지만 잘 기억하면 되지, 시리얼 케이블의 포트 번호까지 맟출 필요없다(se0/0, se0/1 끼리 연결 가능)



라우터 설정 시 모드
	1. user mode >> 사용자 모드 : 별 권한 없는 별 볼일없는 얘
	2. previleged mode >> 관리자 모드 : 직접 설정을 변경할 순 없지만 기타 작업(변경사항 저장, 저장된 내용 보기)
	3. configuration mode >> 설정 ㅁ드: 직접 설정을 변경할 순 있지만 변경 사항을 저장시킬 순 없는 얘
		: 그래서 변경 사항을 저장할땐 빠져나와 previlieged mode 로 가서 copy r s 해준다
			: 따로 저장 안해두면 위험한게 RAM 은 휘발성이라 전원 차단되면 설정 사항이 다 날아가서 비휘발성인 NVRAM 부분에 저장해줘야된다



프롬프트 종류
	1. >
		: user mode
	2. #
		: prevlieged mode
	3. (config)#
		: configuration mode
	4. (config-line)#
		: configuration mode 에서 특정 라인(= 콘솔 , 시리얼, 이더넷 등 )의 설정 모드로 들어감
		: line 이란?
			: 관리자가 라우터로 접근하는 길

	5. (config-int)#
		: configuration mode 에서 특정 인터페이시의 설정 모드로 들어감
		: interface 란?
			: 라우터에 있는 접속 가능한 포트
			: 인터페이스 예시
				: lan 구간 >> fastEthrent
				: wan 구간 >> serial
			: 주의 ) 콘솔을 인터페이스라고 하진 않는다

명령어들
	: 모드 전환
		1. router> enable
			: user mode 에서 previleged mode 로 전환
		2. router# configure terminal
			: previleged mode 에서 configuration mode 로 전환한다
		3. ctrl+z 누르기
			: previleged mode 로 이동
				: previleged mode 이상의 mode 에서만 잘 적용된다
		4. exit
			: 하위 모드로 이동

	: 특정 라인의 설정 모드로 전환
		: configuration mode 이상의 모드에서 진입 가능하다
			: (config)# 일때도 가능하고, 다른 라인의 설정모드( (config-lie)#  )일때도 가능

		1. router(config)# line console 0
			: 콘솔 설정 모드 진입
			: line console '0' 인건 console 의 포트는 0 하나 밖에 없어서 그냥 고정적으로 0 쓴다는 것 같다

		2. router(config)# line vty 0 4
			: vty 설정 모드 진입
				: vty 란 ? >> 라우터 인터페이스를 통하여 접속하는 가상 터미널 라인
					: Virtual TeletYpe
			: line vty '0 4'
				: 0 4 는 vty의 0번 부터 4번 포트 전부에 대한 설정을 하겠단 거다
					: 라우터의 기본 vty 동시 접속 포트는 총 5개이고, 각 포트의 번호는 0,1,2,3,4 인데 , 결국 vty 의 모든 포트를 칭하는거다	
					: 0 4 대신 다른 숫자를 쓸 수 있지만, 대개 0 4 를 쓰는 편

	: 특정 인터페이스의 설정 모드로 전환
		1. interface fastethernet?/?	
			: fastethernet?/? 인터페이스의 설정 모드로 진입
			: 물론 ?/? 은 0/0 , 0/1 , ... 같은거임 

		2. interface serial?/?
			: serial 인터페이스의 설정 모드로 진입

	: 명령어 입력이 없을 시 자동으로 로그아웃 되게 하는 시간을 변경하기
		: 왜 그런진 몰라도 , line console 에 한해서만 자주 쓰인다 (<< line vty 에서도 쓰는 경우를 못봤다 ) 

		1. router(config-line)#exec-timeout 분 초
			: 특정 라인에서 해당 분:초 동안 명령어 입력이 없을시 자동으로 로그아웃(= 그러니까 비밀번호 다시 입력해야되게 한다는거다) 되게 한다
			: 특수 값>> 0 0 입력시 무한대로 시간이 설정된다.


	: 포트활성화
		: 그러니까 특정 인터페이스(serial0/0 , serial0/1 ,.. fastEthernet0/0 .. ) 을 사용할 수 있게 한다는 말이다
		: 처음엔 shutdown(=비활성화)가 디폴트이기 때문에 해당 인터페이스를 사용하기 위해선 반드시 거쳐야하는 절차이다.
		
		router(config-int)#no shutdown
			: shutdown 의 반대로, 해당 포트를 활성화시킨다.



	: 비밀번호 설정
		1. router(config)# enable secret 비밀번호	
			: previleged mode 에서 configuration mode 로 넘어갈때의 비밀번호를 설정하게 한다
			: 내부적으로 암호화 되어 저장되어 보안성이 강하다

		2. 
			router(config-line)# password  비밀번호	
			router(config-line)# login
				: configuration mode 에서 특정 라인의 설정 모드로 넘어갈때의 비밀번호를 설정하게 한다

					:  router(config)# line console 0 , router(config)# line vty 0 4 등등으로 진입한 상태서 쓸 수 있단 말이다 

				: 그 라인의 설정 모드로 진입한 상태에서 , 비밀번호를 설정하고 , login 까지 해준다
					: password 설정만하고 마지막에 login 설정 안해주면, 이후 접속시 password: 창이 안나오므로 주의( password 가 저장되있긴 한데 login 창을 띄우겠다고 설정은 안한게 되는거임)
						: 근데 아랠 보면 알겠지만 line 에 비밀번호 설정할때 login 명령어가 다 뒤따라오는 편이다


	: 로그(log) 싱크 맞추기
		: 주의해야할 건 이걸 configuration mode 에는 적용 시킬 수가 없고 line 관련(=console , vty )해서만 설정 가능하다
		1. router(line-config)# logging synchronous
			: 명령어와 메시지의 중첩 현상 해결
				: line 관련 설정할때 일부 명령어를 치면 그와 관련한 처리가 되었다는 의미로 로그(=일지) 가 출력되는데, 이게 막 0.00001 초만에 나오는게 아니라 좀 텀을 두고 나오는 경우가 있어서 내가 명령어 치는 도중에 로그가 출력될 수 있는데 이러면 불편하니까 설정해주는거다

	: 기타
		1. router(config)# no ip doamin-lookup
			: 기본적으론 previlegd 모드에서 명령어가 아닌 문장을 입력하면 그게 도메인으로 간주되어 DNS server 를 찾도록 되어있는데, 이기능을 안쓰겠다는 거다
			: 설정 안했을때 ex )
				Router#lee
				Translating "lee"...domain server (255.255.255.255) 


	: 설정 내용 보기
		1. router# show running-config
			: 현재 ram 상에 올라온 저장된 내용 보여준다
				: ram - 휘발성. 전원 끄면 내용 없어짐
				: 실제로 NVRAM 에 까지 저장되있는건지는 모르는거다

		2. router# show startup-config
			: 현재 NVRAM 상에 저장된 내용을 보여준다

		3. router# show ip route
			: 라우팅 테이블에 올라온 정보 보기

	: 설정 내용을 전원 껐다 켜도 그대로이게 하기
		router# copy running-config startup-config
			: running-config 상의 내용(=ram 내용) 을 startup-config(=nvram) 으로 저장



	: ip 주소 저장
		1. router(config-int)# ip address 풀ip주소 서브넷마스크
			: 라우터 자기자신 인터페이스 포트에 라우터 자기자신의 풀 ip 주소 바인딩
				: 이때 ip 는 0 처리하는거 없이 풀로 써야된다
					ex) gateway 가 192.168.10.254 이면  192.168.10.254 그대로 써야되는거지,  192.168.10.0 으로 쓰면 안된다.
			: 특정 인터페이스의 설정 모드로 진입한 상태에서 저장하는거다

			: 호스트 컴터들에서 직접 ip , 서브넷 마스크, 게이트 웨이 설정해두는거랑 비슷한 맥락이다
		
		2. router(config)# ip route 목적지네트워크대역 서브넷마스크 [  라우터자기자신의포트명  ||  목적지라우트의포트풀ip주소  ]

			: 라우팅 테이블에 목적지의 주소를 바인딩하는 것
			: 하는법
				sol1 ) ip route 목적지네트워크대역 서브넷마스크 라우터자기자신의출구포트명
					: 라우터자기자신의출구포트명 >> serial 0/0 , serial 0/1 등 외부 영역(WAN) 으로 향하는 현재설정중인라우터 자기자신의 포트 중에서도 목적지로 향하는 포트명

				sol2 ) ip route 목적지네트워크대역 서브넷마스크 목적지라우터의출입구포트의풀ip주소
					 : 목적지라우터의출입구포트의풀ip주소 >> 10.10.10.1 , 20.20.20.2 등 외부 영역(WAN) 으로 향하는 목적지가되는라우터의 포트 중에서도 현재설정중인라우터로 향하는 포트의 ip 주소
						: 주의) 목적지 라우터는 실제 목적지 lan 구역을 담당하는 라우터를 의미하는거지,  중간에 단순 경유하는 라우터를 의미하는게 아니다


				sol3) ip route 0.0.0.0 0.0.0.0 바로다음라우터출입문
					: 디폴트 라우팅
						: 모든 대상들과의 통신을 가능하게 하는 문법
						: 모든 네트워크에 적용할 수 있는 건 아니다	
							: 보안에 취약
							: 주로 종단점(=끝지점)이나, end-device 에 사용됨.
						: 대상을 가리지 않겠다는 의미
							: 브로드 캐스트와는 다른거임
								: 브로드 캐스트는 전송 방식임
								: 근데 이건 유니캐스트임

					: 목적지네트웤대역을 0.0.0.0  
						: 모든 호스트를 의미
					: 서브넷 마스크를 0.0.0.0
						: 모든 서브넷 주소를 의미
					: 바로다음
						: 대상들이 공통적으로 거치는 출입구(== 공통적으로 거치는 라우터의 serial 포트 중 현재 설정중인 라우터와 연결된 포트의 ip = 게이트웨이)

		: 주의 )  
			:static 라우팅의 경우 나만 상대 주소를 알고 있다고 끝나는게 아니라 상대도 나의 주소를 알고 있어야 정상적으로 ping 이 보내진다
				: 왜냐 ? >> ping 은 단순 request 만 하는게 아니라 상대 쪽에서 response 된걸로 TTL 측정하는건데 그러려면 상대쪽에서도 내 쪽으로 데이터를 전송하는거기 때문

			: 삼각 관계의 중간에 낀 라우터는 양쪽 주소를 모두 라우팅 테이블에 담아둬야된다

	: 라우터 자체를 초기화 하기
		step1. router# erase startup-config
			: nvram 에 저장된 내용 다 지움
		step2. router# reload
			: 재부팅



	: 설정 루틴
		: 뭘 먼저 설정하든 상관 없는데 매번 꼴리는데로 설정하면 뭘 더 설정해야하는지 헷갈리니 일정 순서대로 설정하길 추천
			: 순전히 라우터 내의 설정( 모드 이동간의 pw ) 같은거 - 콘솔 라인 설정 - vty 라인 설정 - lan 구간 인터페이스 설정 - wan 구간 인터페이스 설정 - 목적지의 주소를 라우팅 테이블에 올리기
 
Router(config)#ho R1
R1(config)#no ip domain-l
R1(config)#en secret kgitbank1004
% Ambiguous command: "en secret kgitbank1004"

R1(config)#line console 0
R1(config-line)#exec-timeout 0 0
R1(config-line)#password kgitbank1004
R1(config-line)#login
R1(config-line)#logging sync


R1(config-line)#line vty 0 4
R1(config-line)#password kgitbank1004
R1(config-line)#login
R1(config-line)#logging sync

R1(config-line)#interface fa0/0
R1(config-if)#ip address 172.168.10.254 255.255.255.0
R1(config-if)#no shutdown


R1(config-if)#interface se0/0
R1(config-if)#ip add 10.10.10.1 255.255.255.0
R1(config-if)#no shutdown

R1(config-if)#conf t
R1(config)#ip route 192.168.10.0 255.255.255.0 ser0/0
R1(config)#copy r s
R1(config-if)#^Z
R1#copy r s



ping 보냈을때 나오는 에러들과 그 원인
	1. request time out
		: 목적지까지 가긴 갔는데 목적지에서 되돌아오는 과정에서 문제가 생김

	2. host를 찾을 수 없습니다
		: 내쪽에서 뭔가 잘못쳤거나 그래서(존재하지 않는 주소로 보냈다던가) 목적지로 보내기 조차 하지 못함

----------------------------------------------------------------------------------------------------------------------------------------------------------

다이나믹 라우팅
	: 스태틱 라우팅과 다른점은 라우팅 부분 밖에 없음(= 외부 경로를 어떻게 지정하는지 설정하는것만 다르다)
		: 라우터 기본 설정, 라잊 설정(=console, vty) , 인터페이스 fastEthrenet 까진 static 할때랑 다를게 없음
	
	: 다이나믹 라우팅의 경우 목적지는 중요하지 않고, 라우터 자기자신의 인터페이스 정보가 중요하다
		: 자기 정보를 인접 라우터에 전달하는게 다이나믹 라우팅이니까

	: RIP
		v1 : 클레스풀한 경우  
			: 클래스풀하다 
				: hostid 부분은 다 0 화한다.
				: 서브넷팅 적용 안했다
			: 30 초 주기로 전달을 하기 때문에 특정 때에는 ping 이 안날려질 수도 있따.
			: 호스트에 서브넷팅 적용된 상황에서 v1 을 사용할 경우 발생할 수 있는현상 >> 오버랩 현상
				: 만약 network id 까지는 같은데, 서브넷팅이 적용되어 실제로는 다른 lan 구간으로 나뉜 각 영역에서 v1 버전의 라우터를 통하여 서로 소통 하려고 함 Destiantion host unreachable 나온다
					: 내부적으론 다 클래스 풀하게 처리를 함으로 network id 대역만 보고 같은 lan 구간의 host 에게 보내는줄 착각하고 수신지의 lan 영역으롤 다시 돌려보내기 때문이다.

		v2
			: 클래스레스 한 경우에도 사용이 가능하다
				: 게이트 웨이도 클레스레스해도 된다.

	: EIGRP
		: classless 라우팅 프로토콜
		: VLSM, CIDR 지원

	

	: 프롬프트 창
		: (config-router)#
			: rip 프로토콜 설정으로 진입시 보여진다.
			: v1 이건 v2 이건 똑같은 프롬프트 창이 보여진다

	: 명령어
		: 다이나믹 라우팅의 경우 명령어는 router 뒤에 프로토콜 명을 써주는 편이다
		: rip 프로토콜 설정 모드 진입
			1. router(config)# router rip
				: rip v1 버전으로 설정 들어간다
				: rip 프로토콜 설정으로 진입하면 일단 디폴트는 v1 버전인거다

			2. 
				router(config)# router rip
				router(config-router)# version 2
				router(config-router)# no auto-summary
					: rip v2 버전으로 설정 들어간다
						
					: 일단은 rip rip v1 으로 들어온 상태에서, version 2 를 입력해서 v2 버전으로 들어가는거고, no auto-summary 를 통해 자동 축약 기능을 해제하는거다
						: auto-summary
							: 클래스리스 한 ip 를 입력해도 자동으로 클래스 풀하게 (축약)해주는기능
							: v1 에선 이 기능 덕분에 클래스풀한 ip 를 입력해도 별 문제없이 클래스 리스하게 인식되는거다
							: v2 는 서브넷팅 된 ip 도 사용 가능해야하므로 이 기능을 해제시켜주는거임



		: rip 프로토콜로 설정한거 폐기
			 no router rip
				: rip 프로토콜로 설정된 내용이 통째로 날아간다.


		: 라우터 자기자신의 인터페이스 등록 
			network 인터페이스ip주소
				: 따로 서브넷 주소는 안쓴다
				: serial, fastethernet 구분 없이 똑같이 사용한다
				: v1 이건 v2 건 사용하는 방법은 똑같다
					: v1 에서 이곳에 잘못하고 클래스레스한 주소를 적는다고 에러가 나진 않고, 자동ㅇ로 클래스풀하게 바뀐다(== 호스트 필드 부분은 죄다 0으로 취금한다) 
						: auto-summary 기능 때문에 그렇다


목적지를 신경 쓸 필요 없다
	


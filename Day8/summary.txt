
이상준 010-2333-2967 
이멜 ; lsj750811@naver.com

별하나 >> 빈도수 낮지만 중요
별3개>> 시험에 잘 나오고 중요
별5개>> 실무에도 쓰이고 시험에 잘나오고 중요


192.168.41.71

정리 
	<< 암기 tip 
		: 젤 자주쓰는 192 번대 ~ 는 C클, 1바이트의 거의 끝인 ~126 은 A 클, 나머지는 B클이다
		: 서브넷 마스크의 255 개수는 해당 클래스의 networkID 의 옥텟 갯수와 같음
		
Class A >>	1~126까지  , 255.0.0.0(/8)
Class B >> 128~191까지 ,255.255.0.0 (/16)
Class C>> 192~223까지 , 255.255.255.0 (/24)

IP addressing << 10 페이지 빈칸
	Address Class / NetworkAddress /Host Address / NetworkBroadcast Address / Default SubnetMask
	C	/	216.14.55	/	137	/	216.14.55.255	/	255.255.255.0(/24)
	A 	/	123	/	1.1.15	/	123.255.255.255	/	255.0.0.0(/8)
	B	/ 150.127	/	221.244	/	150.127.255.255	/	255.255.0.0(/16)
	B	/ 175.12	/	239.244	/	 175.12.255.255	/255.255.0.0(/16)


------------------------------------------------------------------------------------

SubnetMask
	: 가면. 어떠한 역할을 부여하기 위해.
	*****: 메인이 아닌 어떤 가공을 통한 네트워크를 만들기 위햇 ㅓ 씌우는 마스크
	*****: 관련 구성<<  네트워크를 할당 받으면 Host 부분은 사용자 마음대로 사용

		(1) subnet mask ==  총 네트워크 범위에서 Network feild  에 '1' 을 할당 && Host feild 에 '0' 을 할당한것
			: Network feild  
				: 그냥 IP 주소를 2진수로 나타냈을때 Network ID 부분에 해당하는 각 비트 를 말하는 것 같고, Network field 의 결과물을 NetworkID 라고 하는 것 같다
				: Network field != Network ID

			: Host feild 에 '0'
				: Host field != HostID 

		(2):  network ID == Hostfield 를 모두 0 으로 채움
			:  대표 주소 느낌
			: 장비에 입력해서 쓰는 용도가 아니라 라우팅 할때 Network ID 를 대조해서 같은 Network ID 가지는 장비에게 통신한다
		
		(3)  Broadcast 주소 == Hostfield 를 모두 1 로 채움
			: 멀티 캐스트 아니라 braodcast 주소인거고,  또다른 브로드캐스트 주소인 255.255.255.255 와는 용도가 다르다
				:  255.255.255.255 << 대상을 가리지 않고 해당 범위의 모든 장치에게 전달하는 브로드캐스트
				: 특정 NetworkID를 가지는 얘들한테만 broadcast 로 전달함 << IT bank 수강생 여러분

	: IP 주소(== NetworkAddress.HostAddress )와 Subnet mask(== 255 그런거 ) 를 And 연산하면 Network ID 값을 구할 수 있음
		: 255 == 다 1 인건데 IP 주소에서 SubnetMask 의 255값 가지는 옥텟 위치와 수가 IP 주소의 Network Address 의 옥텟 위치와 수가 정확히 일치하니까

	: Network ID와 Broadcast 주소는 IP 주소로 사용할 수 없다 >> 가용iP 와 subnet 주소의 개수가 차이나는 원인이다
		: 가용 IP >> 장치나 장비에 입력해서 쓸 수 있는 IP
		: 서브넷 주소 >> 장치에 입력 못하지만 존재는 하는 IP + 가용 IP
			:장치에 입력 못하지만 존재는 하는 IP == Network ID와 Broadcast 주소



	


	

	**: 2진수로 표현했을때 1이 맨 왼쪽부터 연속적으로 나와야된다
		: 그러니까 0 이 이미 나왔는데 그 뒤에 또 1 이 나타나면 안됨
			: ex ) 
				: 255.255.255.128  Subnet mask 사용 "가능"
				: 255.255.255.10  Subnet mask 사용 "불가능"
		: tip 
			: 128, 64 , 32 , 16 , 8 , 4 , 2 , 1  을 앞에서부터 차례대로 더한 값만 subnetmask 의 옥텟값이 될 수 있다
				: 128 , 128+64 , 128+64 + 32 , 128+64 + 32 + 16 ,  128+64 + 32 + 16 +8, ... 의 9 개의 숫자 이외의 숫자는 절대 못온다 

	: prefix >> Subnetmask 에 1 이 들어간 bit 의 개수로 , subnet mask 의 또다른 표현 방법
		: 255.255.0.0 == /16 , 255.0.0.0 == /8 , ... 
		: ex) /27 == /(24+ 3) == 255.255.255.0 + 0.0.0.11100000== 255.255.255.224


	: 18 페이지 문제
		: 서브넷 마스크가 표기되지 않을 수 도 있다.  이럴 경우 디폴트 서브넷 마스크를 적용하는거다
		: 그렇다  << A 클래스 이고, 앞의 한 옥텟이 같다
		: 그렇다 << B 클래스 이고 , 앞의 두 옥텟이 같다

	: classful 하다 == Subnetmask 를 각 class 별 default 값으로 사용하는 것
		: 그럼 default 값을 사용하지 않는 경우도 있단 소리다.
		: 문제점 >> 단순히 A , B, C 클로만 구분해서 사용해도 낭비가 심할 수 있다




	***** : Subneting == IP 를 효율적으로 낭비없이 분배하고 Broadcasst Domain의 크기를 "작게 나누어주는 것" 
			: 그러니까 Classful Network 를 여러개로 자르는 것
			: Broadcast Domain == 송신한 브로드캐스트 메시지를 수신 허용하는 영역
				: 영역 내에 있는 장치는 직접 통신이 가능하고, 허용 영역은 라우터 사용을 기준으로 분할됨
			: subneting 을 위해 필요한 것 두가지
				1. 피자 조각의 크기 - 호스트의 크기에 맞게 적절한 크기로 작게 자르는 것
				2. 피자 조각의 개수 - 하나의 네트워크를 필요한 조직의 개수에 맞게 자르는것

	***** : Classless == Class 별 default subnet mask 를 사용하지 않고 적당한 크기의 subnet mask로 사용자의 상황에 따라 여러개로 나누어 사용


IP 주소에는 반드시 서브넷 마스크가 있다.
서브넷 마스크는 기본적으로 255와 0으로 이루어져 있다.
여기서 255는 네트워크 부분이며 0은 호스트 부분이 된다.
255로 된 부분은 무시하시고 0으로 된 부분에서 IP를 나눠쓰는 혹은 IP를 쪼개는 개념이다.

2**(영의갯수) == 가능한 서브넷팅 서브넷 주소 갯수
2**(영의갯수) -2 == 가능한 서브넷틍 가용 주소 갯수




	: 26 페이지 문제 <<  https://1000hg.tistory.com/31 참고
						/	class 		/	 default 서브넷 주소 	/ default 가용 ip 주소	/ subneting 서브넷 주소 / subneting 가용 ip 주소
	172.16.2.10	/  255.255.255.0  /	B	/	172.16.0.0 ~ 172.16.255.255	/ 172.16.0.1 ~ 172.16.255.254	/ 172.16.2.0 ~ 172.16.2.255 / 172.16.2.1 ~  172.16.2.254
10.6.24.20 /  255.255.0.0 	/ 	A	/ 10.0.0.0 ~ 10.255.255.255 /  10.0.0.1 ~ 10.255.255.254	/ 10.6.0.0 ~ 10.6.255.255 / 10.6.0.1 ~ 10.6.255.254
172.30.36.12 /255.255.255.0    /	B	/ 172.30.0.0 ~ 172.30.255.255 / 172.30.0.1 ~ 172.30.255.254/ 172.30.36.0 ~ 172.30.36.255 /  172.30.36.1 ~ 172.30.36.254

201.222.10.60 / 255.255.255.248 /	c      / 201.222.10.0 ~ 201.222.10.255 /  201.222.10.1 ~ 201.222.10.254 / 201.222.10.56 ~ 201.222.10.63 /  201.222.10.57 ~ 201.222.10.62

15.18.192.6 /255.255.0.0 / A / 15.0.0.0 ~ 15.255.255.255 /  15.0.0.1 ~ 15.255.255.254 /  15.18.0.0 ~ 15.18.255.255 / 15.18.0.1 ~ 15.18.255.254
153.70.100.2/  255.255.255.192 /B / 153.70.0.0 ~ 153.70.255.255 / 153.70.0.1 ~ 153.70.255.254 / 153.70.100.0 ~153.70.100. 255 /  153.70.100.1 ~153.70.100. 254
 

		: 201.222.10.60 / 255.255.255.248에 대한 subnetting 풀이 추론
			: 일단 0 은 3 개. >> 8 개
			: 0인 값을 다 더한 건  >> 63
			: 최종적으론 x<= <=63 이니까 56~63 인거



----------------------------------------------------------------------------------------------------------------------------------------------


192.168.0.3 이고 , 50 명이 근무하는 사무실

일단 C 클래스.
255.255.255.0 << 디폴트.
128	64	32	16 	8	 4	 2	 1 
0	0	0	0	0	0	1	1
1	1	1	1	1	0	0	0

1+2+4+8+16+32 == 63
1+2+4+8+16 ==31
정답 >> 192.168.0.0~192.168.0.63


>> 정석풀이 . 비추
	: 2**n -2 >= a 하고 비트 변환

>> 얍삽
	: 디폴트보다 작게 만드는것 == 서브넷마스크
	: 255.255.255.192 << 64 까지는 1 해줌

